package org.ziptie.server.dispatcher;

/**
 * Notification that a task is complete
 * 
 * @author chamlett
 */
public class TaskCompleteEvent extends TaskEvent
{
    static final long serialVersionUID = 3337485022404046069L;

    /** The outcome of the execution of the task */
    private Outcome outcome;

    /** The throwable generated by the execution of the task, if any */
    private Throwable throwable;

    // ----------------------------------------------------------------
    //                    C O N S T R U C T O R S
    // ----------------------------------------------------------------

    /**
     * Constructor for the event.  The outcome will default to <code>SUCCESS</code>
     * if not otherwise set. 
     */
    public TaskCompleteEvent()
    {
        outcome = Outcome.SUCCESS;
    }

    // ----------------------------------------------------------------
    //                   P U B L I C   M E T H O D S
    // ----------------------------------------------------------------

    /**
     * Get the outcome of this task, as returned by <code>ITask.execute()</code>.
     * 
     * @return the outcome of the task
     */
    public Outcome getOutcome()
    {
        return outcome;
    }

    /**
     * @return Any throwable resulting from the execution of the <code>ITask</code>
     */
    public Throwable getThrowable()
    {
        return throwable;
    }

    // ----------------------------------------------------------------
    //                   P A C K A G E   M E T H O D S
    // ----------------------------------------------------------------

    /**
     * Set the <code>Outcome</code> of this event.
     * 
     * @param outcome The outcome to set.
     */
    void setOutcome(Outcome outcome)
    {
        this.outcome = outcome;
    }

    /**
     * Set the <code>Throwable</code> for this event.
     * @param throwable The throwable to set.
     */
    void setThrowable(Throwable throwable)
    {
        this.throwable = throwable;
    }
}
